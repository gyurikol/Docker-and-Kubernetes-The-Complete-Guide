QUESTIONS AND ANSWERS
    what is a image?
        single file with all the deps and config required to run a program
    what is a container?
        instance of an image. runs a program.
    what is docker?
        docker is a platform or ecosystem around creating and running containers
    why do we use docker?
        docker makes it really easy to install and run software without worrying about setup or depenencies
    what is the docker client (docker cli)?
        tool that we issue commands to
    what is the docker server (docker daemon)?
        toold that is responsible for creating images, running containers, etc.

    what is namespacing?
        isolating resources per process (or group of processes)
    what are control groups (cgroups)?
        used to limit amount of resources used per process

    what is a dockerfile?
        configuration to define how your container should behave

    what is docker compose?
        used to start up multiple docker containers at the same time.
        automates some of the long-winded arguments we were passing to 'docker run'.
        assists in connecting containers in some automated fashion (networking).

    what are restart policies?
        they are used to state a container automatic restart policy in the event a container has crashed, stopped, etc.

    why cant i put no without quotes in docker-compose.yml file?
        no is a yaml file reserved word for false. therefore needs to be contained within single or double quotes.

    what is kubernetes?
        - system to deploy containerized apps
        - system for running many different containers over multiple different machines
    why use kubernetes?
        when you need to run many different containers with different images
    what is a node (kuberenetes)?
        virtual machine or physical computer
    what is a master (kubernetes)?
        - machines (or vm's) with a set of programs to manage nodes
        - controls what each node does
    what is a cluster (kubernetes)?
        Nodes + Master form a 'Cluster'

    what is minikube? (development environment)
        command line software you can use to setup a tiny kubernetes cluster on local computer
    what is a managed solution? (production environment)
        references to outside cloud providers that will setup an entire kubernetes cluter
        they will also handle alot of the low-level tasks required in a secure fashion
            e.g. EKS (Amazon Elastic Container Service for Kubernetes)
                 GKE (Google Cloud Kubernetes Engine)
    
    when do we want to use a pod object (k8s)?
        when we want to 'run one or more closely related containers'
    when do we want to use a services object (k8s)?
        when we want to 'set up networking in a kubernetes cluster'
    what is the 'label selector' system (k8s)?
        when we want to provide a 'service' by reference to an objects label metadata

    what is the kube-apiserver (k8s)?
        - lives in master
        - responsible for monitoring the current status of all the different nodes inside of the cluster
          to ensure that they are doing the correct thing

    what is a 'Imperative Deployment'?
        do exactly these steps to arrive at this container setup
    what is a 'Declarative Deployment'?
        our container setup should look like this, make it happen
    
    what is a deployment object (k8s)?
        maintains a set of identical pods, ensuring that they have the correct config and that the right number exists
    
    what is the difference between a 'Pod' and 'Deployment' object?
        -----------------------------------------------------------------------------------
        Pods                                    | Deployment
        ----------------------------------------|------------------------------------------
        - runs a single set of containers       | - runs a set of identical pods (one or more)
        - good for one-off dev purposes         | - monitors the state of each pod, updating as necessary
        - rarely used directly in production    | - good for dev
                                                | - good for production
        -----------------------------------------------------------------------------------
    
    when we create a deployment, what happens in the pod workflow?
        - it will have something attached to it called a 'Pod Template'
    what is a 'Pod Template'?
        a block of configuration that specifies what any pod created by the deployment will look like
            e.g.
                container count, name, port, image etc.
    why do we use service pods?
        - because on creation and deletion of pods, ip address's may change
            > this is why we specify selectors, to allow traffic routing to it regardless of its ip

    what are some of the approaches to update an image version (k8s)?
        - manually delete pods to get the deployment to recreate them with the lates version
        - tag built images with a real version number and specify that version in the config file
        - use an imperative command to update the image version the deployment should use
    
    what is the difference in terminology of the word 'Volume' between Kubernetes and Generic container terminology?
        Generic Container Terminology:
            - some type of mechanism that allows a container to accesss a filesytem outside itself
        Kubernetes
            - An 'Object' that allows a container to store data at the pod level

    what is a PVC (k8s)?
        - Persistant Volume Claim

    why dont we want to just simply increase replicas on a postgres deployment (k8s)?
        - If the databases are not aware of each other it is a recipe for disaster
        - Data will be become dirty, plus concurrent access can cause issues when holding file input access

    what is a volume? (k8s)
        piece of storage tied to pod (if pod dies, volume dies)
    what is a persistant volume? (k8s)
        a volume that lives outside of a pod (if a pod dies, volume persists)
    what is a persistant volume claim? (k8s)
        an advertisedment of options which you can request inside of your pod config.
        and when you do, kubernetes will look inside the stores of persistant volume and could give you
            a volume ahead of time (statically provisioned persistent volume) or attempt to create one
            on the fly (dynamically provisioned persistent volume)
    what is a secret?
        a piece of information in the cluster to be stored securely (database password)

    what are services?
        they set up networking in a kubernetes cluster
            e.g clusterIP, nodePort, loadBalancer, ingress
    what is a clusterIp?
        exposes a set of pods to other objects in the cluster
    what is a nodePort?
        exposes a set of pods to the outside world (only really good for dev purposes!!!)
    what is a loadBalancer?
        legacy way of getting network traffic into a cluster
            legacy because it will only really give access to one set of pods that has the "load balancer service".
            wont be able to expose another set of pods within the cluster.
    what is ingress?
        exposes a set of services to the outside world
    why use ingress instead of building out our own 'load balancing service' and 'nginx'?
        one good reason is that the ingress will send traffic directly to the pod instead of through an clusterIp service.
        this allows for features such as sticky sessions to be maintained, so that if a user wants to make more than one
        request, that they go to the same application/pod.  
